{"version":3,"sources":["components/App/App.module.css","components/IntroPage/IntroPage.module.css","components/ui/AnswerButton/AnswerButton.module.css","components/ui/MathCharacters/MathCharacters.js","components/ui/NextButton/NextButton.js","components/IntroPage/IntroPage.js","components/ui/Question/Question.js","components/ui/AnswerButton/AnswerButton.js","components/Timer/Timer.js","components/ResultsPage/ResultsPage.js","components/App/App.js","serviceWorker.js","index.js","components/ResultsPage/ResultsPage.module.css"],"names":["module","exports","MathCharactersStyle","styled","h2","MathCharacters","Button","button","NextButton","props","onClick","buttonText","IntroPage","className","css","introPageWrap","style","display","introPageContent","content","QuestionWrap","p","Question","questionText","valueA","operator","valueB","AnswerButton","btn","value","answer","TimerWrap","section","Timer","displayProp","ResultsPage","resultsPageWrap","resultsPageContent","resultsPageTextSmall","resultsPageTextLarge","score","outOf","onThirdLevel","onSecondLevel","Fade","children","CSSTransition","timeout","classNames","App","state","show","showIntro","showQuiz","showResults","siteTitle","pageText","pageButtonText","currentPage","questionsTotal","questionOperatorArray","questionValueA","questionOperator","questionValueB","questionValueMin","questionValueMax","questionTimeOut","countTransition","timerText","timerCurrent","timerRemaining","correctAnswer","answer1","answer2","answer3","answerScore","totalTimeToDeduct","questionTimer","jumpTo","bind","reset","this","generateQuestionValues","setTimeout","setState","clearInterval","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","val1","val2","answersArr","ans1","ans2","ans3","parseInt","console","log","event","minQuestionVal","maxQuestionVal","operatorsArray","getRandomInt","minVal","maxVal","checkForDuplicates","generateAnswerValues","answersArray","operatorFunctions","a","b","answer1raw","Number","parseFloat","toFixed","push","forEach","index","decimalTidyAnswer","splice","checkForDuplicatesInArray","shuffleArray","timeCurrent","setInterval","userAnswer","currentTarget","addPoint","startCountdown","handleSelectedValue","siteIntro","instruction","siteWrapper","siteHeader","title","quizRound","roundNo","roundOf","in","wrapper","quiz","answerWrap","outcome","outcome1","outcome2","outcome3","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4380c379.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteWrapper\":\"App_siteWrapper__1vc7l\",\"wrapper\":\"App_wrapper__1BNF1\",\"quiz\":\"App_quiz__1souW\",\"siteHeader\":\"App_siteHeader__-WrrU\",\"title\":\"App_title__2MzaC\",\"answerWrap\":\"App_answerWrap__BTrAI\",\"quizRound\":\"App_quizRound__2mgR-\",\"roundNo\":\"App_roundNo__10uQs\",\"roundOf\":\"App_roundOf__3_FIa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"introPageWrap\":\"IntroPage_introPageWrap__1L_0_\",\"introPageContent\":\"IntroPage_introPageContent__2XwAi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"AnswerButton_btn__1uOnZ\"};","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst MathCharactersStyle = styled.h2`\r\n  display: inline-block;\r\n  background: rgba(0,0,0,0.05);\r\n  font-size: 1.9rem;\r\n  padding: 5px 10px;\r\n  margin: 0;\r\n`;\r\n\r\nexport default function MathCharacters()  {\r\n  return <MathCharactersStyle>+ - * /</MathCharactersStyle>;\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = styled.button`\r\n  background: transparent;\r\n  border: 0;\r\n  color: #FFE45A;\r\n  font-size: 1.25em;\r\n  margin: 2rem 1rem 0;\r\n  padding: 1rem 1rem;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  position: relative;\r\n\r\n  span {\r\n    font-family: 'Lora', serif;\r\n    position: relative;\r\n    z-index: 2;\r\n  }\r\n\r\n  &::after {\r\n    background: #444;\r\n    content: \"\";\r\n    transform: skew(-10deg) rotate(-2deg);\r\n    transition: transform 0.2s ease-out;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    z-index: 1;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    \r\n    cursor: pointer;\r\n    outline: 0;\r\n\r\n    &::after {\r\n      background: #333;\r\n      transform: skew(10deg) rotate(2deg);\r\n    }\r\n  }\r\n\r\n  &:active::after {\r\n    background: #333;\r\n  }\r\n`;\r\n\r\nexport default function NextButton(props)  {\r\n\treturn (\r\n\t\t<Button onClick={props.onClick}>\r\n\t\t\t<span>{props.buttonText}</span>\r\n\t\t</Button>\r\n\t);\r\n}\r\n\r\nNextButton.propTypes = {\r\n  answer: PropTypes.string,\r\n}\r\n","import React from 'react';\r\nimport MathCharacters from '../ui/MathCharacters/MathCharacters';\r\nimport NextButton from '../ui/NextButton/NextButton';\r\nimport PropTypes from 'prop-types';\r\nimport css from './IntroPage.module.css';\r\n\r\nexport default function IntroPage(props) {\r\n\r\n  return (\r\n    <section className={css.introPageWrap} style={{display: props.display ? 'block' : 'none'}}>\r\n      <article className={css.introPageContent}>\r\n        <MathCharacters />\r\n        <p>{props.content}</p>\r\n      </article>\r\n      <NextButton buttonText={props.buttonText} onClick={props.onClick} />\r\n    </section>\r\n  );\r\n}\r\n\r\nIntroPage.propTypes = {\r\n  content: PropTypes.string,\r\n  buttonText: PropTypes.string,\r\n}\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst QuestionWrap = styled.p`\r\n  font-size: 1.5rem;\r\n  font-family: 'Lora', serif;\r\n  margin: 2rem 1rem 0;\r\n  text-align: center;\r\n\r\n  @media (min-width: 600px) {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  @media (min-width: 900px) {\r\n    font-size: 3rem;\r\n  }\r\n\r\n  span {\r\n  \tbackground: rgba(0,0,0,0.05);\r\n  \tpadding: 3px 5px;\r\n  }\r\n`;\r\n\r\nexport default function Question(props)  {\r\n\treturn (\r\n\t\t<QuestionWrap>\r\n\t\t\t{props.questionText} <span>{props.valueA} {props.operator} {props.valueB}</span>?\r\n\t\t</QuestionWrap>\r\n\t);\r\n}\r\n\r\nQuestion.propTypes = {\r\n  answer: PropTypes.number,\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from './AnswerButton.module.css';\r\n\r\n\r\nexport default function AnswerButton(props) {\r\n\treturn (\r\n\t\t<button className={css.btn} value={props.answer} onClick={props.onClick}>\r\n\t\t\t{props.answer}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nAnswerButton.propTypes = {\r\n\tanswer: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TimerWrap = styled.section`\r\n  font-size: 1rem;\r\n  left: 50%;\r\n  margin: 3rem 0 0;\r\n  position: absolute;\r\n  text-align: center;\r\n  transform: translate(-50%);\r\n  width: 150px;\r\n\r\n  @media (min-width: 600px) {\r\n    margin: 4rem 0 0;\r\n  }\r\n\r\n  &::before,\r\n  &::after {\r\n    background: #333;\r\n    border-radius: 5px;\r\n    content: '';\r\n    height: 5px;\r\n    left: 50%;\r\n    opacity: 0;\r\n    position: absolute;\r\n    transform: translateX(-50%);\r\n    transition: opacity 0.3s ease-out, width 0.3s ease-out;\r\n    width: 120px;\r\n  }\r\n\r\n  &::after {\r\n    background: rgba(0,0,0,0.075);\r\n    opacity: 1;\r\n    width: 120px;\r\n  }\r\n\r\n  &.countdown-started::before {\r\n    opacity: 1;\r\n    transition: width 9.95s linear, left 9.95s linear, opacity 0.3s linear;\r\n    width: 0;\r\n  }\r\n`;\r\n\r\n\r\nexport default function Timer(props) {\r\n\r\n  return (\r\n    <TimerWrap className={props.displayProp ? 'countdown-started' : ''} />\r\n  );\r\n}\r\n\r\nTimer.propTypes = {\r\n  content: PropTypes.string,\r\n  buttonText: PropTypes.string,\r\n}\r\n\r\n","import React from 'react';\r\nimport NextButton from '../ui/NextButton/NextButton';\r\nimport PropTypes from 'prop-types';\r\nimport css from './ResultsPage.module.css';\r\n\r\nexport default function ResultsPage(props) {\r\n  function setResultComment(score) {\r\n    let resultComment;\r\n    if (score <= 3) {\r\n      resultComment = \"Ouch, try not to beat yourself up too much.\";\r\n      return resultComment;\r\n    } else if (score >= 4 && score <= 7) {\r\n      resultComment = \"Not too bad, but room for improvement.\";\r\n      return resultComment;\r\n    } else if (score >= 8 && score <= 9) {\r\n      resultComment = \"Pretty good! But not quite a perfect score.\";\r\n      return resultComment;\r\n    } else if (score >= 11 && score <= 12) {\r\n      resultComment = \"Super! Let's start next!\";\r\n      return <NextButton buttonText={'Third and last Level'} onClick={() => props.onThirdLevel()} />\r\n    } else if (score >= 13 && score <= 13) {\r\n      resultComment = \"Congrats! Now you have passed 3 levels of math quiz!\";\r\n      return resultComment;\r\n    } else {\r\n      resultComment = \"Perfect! Well done you. Perhaps you'll get harder questions next time.\";\r\n      return <NextButton buttonText={'Next Level'} onClick={() => props.onSecondLevel()} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className={css.resultsPageWrap} style={{ display: props.display ? 'block' : 'none' }}>\r\n      <article className={css.resultsPageContent} >\r\n        <p className={css.resultsPageTextSmall} >{props.content}</p>\r\n        <h3 className={css.resultsPageTextLarge} >{props.score} out of {props.outOf}</h3>\r\n        <p className={css.resultsPageTextSmall}>{setResultComment(props.score)}</p>\r\n      </article>\r\n      <NextButton buttonText={props.buttonText} onClick={() => props.onClick()} />\r\n    </section>\r\n  );\r\n}\r\n\r\nResultsPage.propTypes = {\r\n  content: PropTypes.string,\r\n  buttonText: PropTypes.string,\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport IntroPage from '../IntroPage/IntroPage';\r\nimport Question from '../ui/Question/Question';\r\nimport AnswerButton from '../ui/AnswerButton/AnswerButton';\r\nimport Timer from '../Timer/Timer';\r\nimport ResultsPage from '../ResultsPage/ResultsPage';\r\nimport css from './App.module.css';\r\n\r\nconst duration = 400;\r\n\r\n// Fade handler\r\nconst Fade = ({ children, ...props }) => (\r\n  <CSSTransition\r\n    {...props}\r\n    timeout={duration}\r\n    classNames=\"fade\"\r\n  >\r\n    {children}\r\n  </CSSTransition>\r\n);\r\n\r\nclass App extends Component {\r\n\r\n  // State constructor\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      showIntro: true,\r\n      showQuiz: false,\r\n      showResults: false,\r\n      siteTitle: 'Math Quiz',\r\n      pageText: 'This site will generate random math questions. It has 3 levels and gives you a limited time to answer them.',\r\n      pageButtonText: 'Start',\r\n      currentPage: 0,\r\n      questionsTotal: 10,\r\n      questionText: 'What is...',\r\n      questionOperatorArray: ['+', '-', '*', '/'],\r\n      questionValueA: 0,\r\n      questionOperator: '',\r\n      questionValueB: 0,\r\n      questionValueMin: 3,\r\n      questionValueMax: 12,\r\n      questionTimeOut: 10000,\r\n      countTransition: false,\r\n      timerText: 'Time left until next question...',\r\n      timerCurrent: 10,\r\n      timerRemaining: 10,\r\n      correctAnswer: 1,\r\n      answer1: 1,\r\n      answer2: 2,\r\n      answer3: 3,\r\n      answerScore: 0,\r\n      totalTimeToDeduct: 0,\r\n      questionTimer: 0,\r\n    }\r\n\r\n    this.jumpTo = this.jumpTo.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n    this.onSecondLevel = this.onSecondLevel.bind(this);\r\n    this.onThirdLevel = this.onThirdLevel.bind(this);\r\n  }\r\n\r\n  // React Lifecycle - triggered before first page render\r\n  componentWillMount() {\r\n\r\n    this.generateQuestionValues();\r\n\r\n    // Transition In (first page load)\r\n    setTimeout(() => {\r\n      this.setState({\r\n        show: !this.state.show,\r\n      });\r\n    }, duration);\r\n  }\r\n\r\n  // Clean up\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.questionTimer);\r\n  }\r\n\r\n  // Knuth shuffle array\r\n  shuffleArray(array) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  // Check for duplicate value in initial answers and nudge\r\n  checkForDuplicates(val1, val2) {\r\n    if (val1 !== val2) {\r\n      return val2;\r\n    } else {\r\n      return val2 + 1;\r\n    }\r\n  }\r\n\r\n  // Check for duplicate answers in answers Array\r\n  checkForDuplicatesInArray(answersArr) {\r\n    let ans1 = answersArr[0];\r\n    let ans2 = answersArr[1];\r\n    let ans3 = answersArr[2];\r\n\r\n    if (ans2 === ans1) {\r\n      answersArr[1] = parseInt((ans1 + 1), 10);\r\n    }\r\n    if (ans3 === ans2 || ans3 === ans1) {\r\n      answersArr[2] = parseInt((ans2 + 2), 10);\r\n    }\r\n\r\n    console.log(`After checkForDuplicates: ${answersArr} | Type of a: ${typeof (answersArr[1])} - Type of b: ${typeof (answersArr[2])}`);\r\n  };\r\n\r\n  generateQuestionValues(event) {\r\n    let minQuestionVal = this.state.questionValueMin;\r\n    let maxQuestionVal = this.state.questionValueMax;\r\n    let operatorsArray = this.state.questionOperatorArray;\r\n    const getRandomInt = (minVal, maxVal) => Math.floor(Math.random() * (maxVal - minVal + 1)) + minVal;\r\n    const getRandomOperator = (array) => array[Math.floor(Math.random() * array.length)];\r\n    let valueA = getRandomInt(minQuestionVal, maxQuestionVal);\r\n    let valueB = this.checkForDuplicates(valueA, getRandomInt(minQuestionVal, maxQuestionVal));\r\n    let operator = getRandomOperator(operatorsArray);\r\n\r\n    // Set those values\r\n    this.setState({\r\n      questionValueA: valueA,\r\n      questionOperator: operator,\r\n      questionValueB: valueB,\r\n    }, () => {\r\n      this.generateAnswerValues(event);\r\n    });\r\n  }\r\n\r\n  generateAnswerValues(event) {\r\n    const getRandomInt = (minVal, maxVal) => Math.floor(Math.random() * (maxVal - minVal + 1)) + minVal;\r\n    let valueA = this.state.questionValueA;\r\n    let operator = this.state.questionOperator;\r\n    let valueB = this.state.questionValueB;\r\n    let minVal = 1;\r\n    let maxVal = 5;\r\n    let answersArray = [];\r\n    // Required because the operator is currently a string\r\n    let operatorFunctions = {\r\n      '+': (a, b) => (a + b),\r\n      '-': (a, b) => (a - b),\r\n      '/': (a, b) => (a / b),\r\n      '*': (a, b) => (a * b),\r\n    };\r\n\r\n    // Answer is correct, but generate other values close to it...\r\n    let answer1raw = operatorFunctions[operator](valueA, valueB);\r\n    // If answer1raw produces a decimal...\r\n    if (answer1raw % 1 !== 0) {\r\n      answer1raw = Number.parseFloat(answer1raw).toFixed(1);\r\n    }\r\n    let answer1 = answer1raw;\r\n    let answer2 = operatorFunctions[operator](answer1, getRandomInt(minVal, maxVal));\r\n    let answer3 = operatorFunctions[operator](answer1, getRandomInt(minVal, maxVal));\r\n\r\n    // Push the answers to an array so we can shuffle\r\n    answersArray.push(answer1, answer2, answer3);\r\n\r\n    // console.log(`Before decimal check: ${answersArray}`);\r\n    //check if any of the answers have decimal points\r\n    answersArray.forEach((answer, index) => {\r\n      // Check if the number is decimal\r\n      if (answer % 1 !== 0) {\r\n        let decimalTidyAnswer = Number.parseFloat(answer).toFixed(1);\r\n        // splice[remove, how many to remove, replace with]\r\n        answersArray.splice(index, 1, decimalTidyAnswer);\r\n      }\r\n    });\r\n    // console.log(`After decimal check: ${answersArray}`); \r\n\r\n    // Check for duplicates and nudge them\r\n    this.checkForDuplicatesInArray(answersArray);\r\n\r\n    // Shuffle that array\r\n    this.shuffleArray(answersArray);\r\n\r\n    // Set those values\r\n    this.setState({\r\n      correctAnswer: Number(answer1),\r\n      answer1: answersArray[0],\r\n      answer2: answersArray[1],\r\n      answer3: answersArray[2],\r\n    }, () => {\r\n      console.log(`Correct: ${this.state.correctAnswer} | AnswerA: ${answersArray[0]} | AnswerB: ${answersArray[1]} | AnswerC: ${answersArray[2]} `);\r\n    });\r\n  }\r\n\r\n  // Start countdown to next question...\r\n  startCountdown() {\r\n\r\n    clearInterval(this.state.questionTimer);\r\n\r\n    // SetState\r\n    let timeCurrent = this.state.timerCurrent;\r\n\r\n    let questionTimer = setInterval(() => {\r\n      // Decrement each iteration\r\n      timeCurrent -= 1;\r\n      // SetState\r\n      this.setState({\r\n        timerCurrent: timeCurrent,\r\n      });\r\n\r\n      // If no answer if given, time out and move on\r\n      if (timeCurrent <= 0) {\r\n        this.jumpTo(null);\r\n      }\r\n    }, 1000);\r\n\r\n    // SetState - save timer object in state\r\n    this.setState({ questionTimer: questionTimer });\r\n  }\r\n\r\n  handleSelectedValue(event) {\r\n\r\n    let userAnswer = event ? Number(event.currentTarget.value) : null;\r\n    let addPoint = this.state.answerScore;\r\n    addPoint += 1; //iterate\r\n\r\n    if (userAnswer === Number(this.state.correctAnswer)) {\r\n      this.setState({\r\n        answerScore: addPoint,\r\n        countTransition: false,\r\n      });\r\n      console.log('Correctamundo!');\r\n    }\r\n  }\r\n\r\n  // Next button\r\n  jumpTo(event) {\r\n\r\n    let currentPage = this.state.currentPage;\r\n    currentPage += 1; // increment\r\n\r\n    // If we've triggered the Quiz, Show it...\r\n    if (currentPage === 1) {\r\n\r\n      // Transition Out\r\n      setTimeout(() => {\r\n        this.setState({\r\n          show: !this.state.show,\r\n          countTransition: false\r\n        });\r\n\r\n        // Transition In\r\n        setTimeout(() => {\r\n\r\n          this.setState({\r\n            // Transition Out\r\n            show: !this.state.show,\r\n            showIntro: !this.state.showIntro,\r\n            showQuiz: !this.state.showQuiz,\r\n            currentPage: currentPage,\r\n            timerCurrent: 10,\r\n\r\n          }, () => {\r\n            this.startCountdown();\r\n            // Delay because of parent display: block stopping the transtion\r\n            setTimeout(() => {\r\n              this.setState({ countTransition: true, });\r\n            }, 1);\r\n          });\r\n\r\n        }, duration);\r\n      }, duration);\r\n\r\n      // Keep on Quizing until Results are needed\r\n    } else if (currentPage > 1 && currentPage < this.state.questionsTotal + 1) {\r\n\r\n      this.handleSelectedValue(event);\r\n\r\n      // Transition Out\r\n      setTimeout(() => {\r\n        this.setState({\r\n          show: !this.state.show,\r\n          countTransition: false,\r\n        });\r\n        // Transition In\r\n        setTimeout(() => {\r\n\r\n          // Generate random values\r\n          this.generateQuestionValues(event);\r\n\r\n          this.setState({\r\n            // Transition Out\r\n            show: !this.state.show,\r\n            currentPage: currentPage,\r\n            countTransition: true,\r\n            timerCurrent: 10,\r\n\r\n          }, () => {\r\n            this.startCountdown();\r\n          });\r\n\r\n        }, duration);\r\n      }, duration);\r\n\r\n      // Else, results page\r\n    } else {\r\n\r\n      clearInterval(this.state.questionTimer);\r\n      this.handleSelectedValue(event);\r\n\r\n      // Transition Out\r\n      setTimeout(() => {\r\n        this.setState({\r\n          show: !this.state.show,\r\n          timerCurrent: 10,\r\n          questionTimer: 0,\r\n          countTransition: false,\r\n        });\r\n\r\n        // Process Results\r\n        //this.processResults();\r\n\r\n        // Transition In\r\n        setTimeout(() => {\r\n          this.setState({\r\n            // Transition Out\r\n            show: !this.state.show,\r\n            showQuiz: !this.state.showQuiz,\r\n            showResults: !this.state.showResults,\r\n            currentPage: currentPage,\r\n            siteIntro: 'Results',\r\n            pageText: 'You scored:',\r\n            pageButtonText: 'Restart',\r\n            // pageButtonText: 'Next level',\r\n\r\n          });\r\n        }, duration);\r\n      }, duration);\r\n    }\r\n  }\r\n\r\n  // Reset everything\r\n  reset() {\r\n\r\n    // Transition Out\r\n    setTimeout(() => {\r\n      this.setState({ show: !this.state.show });\r\n      // Generate random values\r\n\r\n      this.generateQuestionValues();\r\n\r\n      // Transition In\r\n      setTimeout(() => {\r\n\r\n        this.setState({\r\n          show: !this.state.show,\r\n          showIntro: true,\r\n          showQuiz: false,\r\n          showResults: false,\r\n          pageButtonText: 'Try again',\r\n          countTransition: false,\r\n          currentPage: 0,\r\n          questionText: 'What is...',\r\n          instruction: 'Select your answer before the timer runs out',\r\n          answerScore: 0,\r\n          pageText: 'Try again and do your best! ;)',\r\n          totalTimeToDeduct: 0,\r\n        });\r\n\r\n\r\n      }, duration);\r\n    }, duration);\r\n  }\r\n\r\n  onSecondLevel() {\r\n\r\n    // Transition Out\r\n    setTimeout(() => {\r\n      this.setState({ show: !this.state.show });\r\n      // Generate random values\r\n\r\n      this.generateQuestionValues();\r\n\r\n      // Transition In\r\n      setTimeout(() => {\r\n\r\n        this.setState({\r\n          show: !this.state.show,\r\n          showIntro: true,\r\n          showQuiz: false,\r\n          showResults: false,\r\n          pageButtonText: 'Second level, Go!',\r\n          countTransition: false,\r\n          currentPage: 0,\r\n          questionText: 'What is...',\r\n          instruction: 'Select your answer before the timer runs out',\r\n          answerScore: 0,\r\n          pageText: 'Are you ready for the second level ? It will be harder than previous ;)',\r\n          totalTimeToDeduct: 0,\r\n          questionValueMin: 10,\r\n          questionValueMax: 30,\r\n          questionsTotal: 12\r\n        });\r\n\r\n\r\n      }, duration);\r\n    }, duration);\r\n  }\r\n\r\n\r\n  onThirdLevel() {\r\n\r\n    // Transition Out\r\n    setTimeout(() => {\r\n      this.setState({ show: !this.state.show });\r\n      // Generate random values\r\n\r\n      this.generateQuestionValues();\r\n\r\n      // Transition In\r\n      setTimeout(() => {\r\n\r\n        this.setState({\r\n          show: !this.state.show,\r\n          showIntro: true,\r\n          showQuiz: false,\r\n          showResults: false,\r\n          pageButtonText: 'Last level, Go!',\r\n          countTransition: false,\r\n          currentPage: 0,\r\n          questionText: 'What is...',\r\n          instruction: 'Select your answer before the timer runs out',\r\n          answerScore: 0,\r\n          pageText: 'Are you ready for the last level ? I belive, you can do it. ;)',\r\n          totalTimeToDeduct: 0,\r\n          questionValueMin: 10,\r\n          questionValueMax: 30,\r\n          questionsTotal: 13\r\n        });\r\n\r\n\r\n      }, duration);\r\n    }, duration);\r\n  }\r\n\r\n  // Render stuff\r\n  render() {\r\n    return (\r\n\r\n      <section className={css.siteWrapper} >\r\n        <header className={css.siteHeader}>\r\n          <h1 className={css.title}>\r\n            {this.state.siteTitle}\r\n          </h1>\r\n          <p className={css.quizRound} style={{ display: this.state.showQuiz ? 'inline-block' : 'none' }}>\r\n            <span className={css.roundNo}>{this.state.currentPage}</span>\r\n            <span className={css.roundOf}>{this.state.questionsTotal}</span>\r\n          </p>\r\n        </header>\r\n\r\n        <IntroPage\r\n          display={this.state.showIntro}\r\n          content={this.state.pageText}\r\n          buttonText={this.state.pageButtonText}\r\n          onClick={this.jumpTo}\r\n        />\r\n\r\n        <Fade in={this.state.show}>\r\n          <div className={css.wrapper}>\r\n            <section className={css.quiz} style={{ display: this.state.showQuiz ? 'block' : 'none' }}>\r\n              <Question questionText={this.state.questionText} valueA={this.state.questionValueA} operator={this.state.questionOperator} valueB={this.state.questionValueB} />\r\n              <section className={css.answerWrap} >\r\n                <AnswerButton answer={this.state.answer1} outcome={this.state.outcome1} onClick={this.jumpTo} />\r\n                <AnswerButton answer={this.state.answer2} outcome={this.state.outcome2} onClick={this.jumpTo} />\r\n                <AnswerButton answer={this.state.answer3} outcome={this.state.outcome3} onClick={this.jumpTo} />\r\n              </section>\r\n              <Timer displayProp={this.state.countTransition ? 'countdown-started' : ''} />\r\n            </section>\r\n\r\n            <ResultsPage\r\n              display={this.state.showResults}\r\n              content={this.state.pageText}\r\n              score={this.state.answerScore}\r\n              outOf={this.state.questionsTotal}\r\n              // buttonText={this.state.pageButtonText}\r\n              buttonText={this.state.pageButtonText}\r\n              onClick={this.reset}\r\n              onSecondLevel={this.onSecondLevel}\r\n              onThirdLevel={this.onThirdLevel}\r\n            />\r\n          </div>\r\n        </Fade>\r\n      </section>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultsPageWrap\":\"ResultsPage_resultsPageWrap__k5t3U\",\"resultsPageContent\":\"ResultsPage_resultsPageContent__3RQcT\",\"resultsPageTextSmall\":\"ResultsPage_resultsPageTextSmall__qaIyR\",\"resultsPageTextLarge\":\"ResultsPage_resultsPageTextLarge__2YhZZ\"};"],"sourceRoot":""}